openapi: 3.1.0
info:
  title: FastAPI
  version: 0.1.0
servers:
- url: /rest/unstructured
paths:
  /vdb_connector/create:
    post:
      tags:
      - Data Sources
      summary: Create Vdbconnector
      description: "Create a new vdb connector\n\nAttributes:\n\n    connector_name:\
        \ The profile name of the connector to create.\n\n    connector_body: The\
        \ body of the connector to create."
      operationId: create_vdbconnector_vdb_connector_create_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVDBConnectorRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorResponse'
        '403':
          description: Missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '500':
          description: Internal Server Error. An unexpected error occurred while processing
            the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
      x-codeSamples:
      - lang: JavaScript
        source: "import UnstructuredClient from 'unstructured-sdk';\n\nconst client\
          \ = new UnstructuredClient({\n  username: 'My Username',\n  password: 'My\
          \ Password',\n});\n\nconst connectorResponse = await client.dataSource.create({\n\
          \  connector_body: {\n    collection_name: 'collection_name',\n    database_name:\
          \ 'database_name',\n    db_user: 'db_user',\n    name: 'name',\n    password:\
          \ 'password',\n    port: 'port',\n    url: 'url',\n  },\n  connector_name:\
          \ 'connector_name',\n});\n\nconsole.log(connectorResponse.profile_id);"
      - lang: Python
        source: "from unstructured import UnstructuredClient\n\nclient = UnstructuredClient(\n\
          \    username=\"My Username\",\n    password=\"My Password\",\n)\nconnector_response\
          \ = client.data_source.create(\n    connector_body={\n        \"collection_name\"\
          : \"collection_name\",\n        \"database_name\": \"database_name\",\n\
          \        \"db_user\": \"db_user\",\n        \"name\": \"name\",\n      \
          \  \"password\": \"password\",\n        \"port\": \"port\",\n        \"\
          url\": \"url\",\n    },\n    connector_name=\"connector_name\",\n)\nprint(connector_response.profile_id)"
  /vdb_connector/list:
    post:
      tags:
      - Data Sources
      summary: List Vdbconnector
      description: List all the vdb connectors
      operationId: list_vdbconnector_vdb_connector_list_post
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVDBConnectorResponse'
        '403':
          description: Missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '500':
          description: Internal Server Error. An unexpected error occurred while processing
            the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
      x-codeSamples:
      - lang: JavaScript
        source: "import UnstructuredClient from 'unstructured-sdk';\n\nconst client\
          \ = new UnstructuredClient({\n  username: 'My Username',\n  password: 'My\
          \ Password',\n});\n\nconst listVdbConnector = await client.dataSource.list();\n\
          \nconsole.log(listVdbConnector.connectors);"
      - lang: Python
        source: "from unstructured import UnstructuredClient\n\nclient = UnstructuredClient(\n\
          \    username=\"My Username\",\n    password=\"My Password\",\n)\nlist_vdb_connector\
          \ = client.data_source.list()\nprint(list_vdb_connector.connectors)"
  /vdb_connector/update:
    post:
      tags:
      - Data Sources
      summary: Update Vdbconnector
      description: "Update a vdb connector\n\nAttributes:\n\n    connector_name: The\
        \ profile name of the connector to update.\n\n    connector_body: The body\
        \ of the connector to update."
      operationId: update_vdbconnector_vdb_connector_update_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVDBConnectorRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorResponse'
        '403':
          description: Missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '500':
          description: Internal Server Error. An unexpected error occurred while processing
            the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
      x-codeSamples:
      - lang: JavaScript
        source: "import UnstructuredClient from 'unstructured-sdk';\n\nconst client\
          \ = new UnstructuredClient({\n  username: 'My Username',\n  password: 'My\
          \ Password',\n});\n\nconst connectorResponse = await client.dataSource.update({\n\
          \  connector_body: {\n    collection_name: 'collection_name',\n    database_name:\
          \ 'database_name',\n    db_user: 'db_user',\n    name: 'name',\n    password:\
          \ 'password',\n    port: 'port',\n    url: 'url',\n  },\n  connector_name:\
          \ 'connector_name',\n});\n\nconsole.log(connectorResponse.profile_id);"
      - lang: Python
        source: "from unstructured import UnstructuredClient\n\nclient = UnstructuredClient(\n\
          \    username=\"My Username\",\n    password=\"My Password\",\n)\nconnector_response\
          \ = client.data_source.update(\n    connector_body={\n        \"collection_name\"\
          : \"collection_name\",\n        \"database_name\": \"database_name\",\n\
          \        \"db_user\": \"db_user\",\n        \"name\": \"name\",\n      \
          \  \"password\": \"password\",\n        \"port\": \"port\",\n        \"\
          url\": \"url\",\n    },\n    connector_name=\"connector_name\",\n)\nprint(connector_response.profile_id)"
  /vdb_connector/delete:
    post:
      tags:
      - Data Sources
      summary: Delete Vdb Connector
      description: "Delete a vdb connector\n\nAttributes:\n\n    connector_name: The\
        \ profile name of the connector to delete."
      operationId: delete_vdb_connector_vdb_connector_delete_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteConnectorRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorResponse'
        '403':
          description: Missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '500':
          description: Internal Server Error. An unexpected error occurred while processing
            the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
      x-codeSamples:
      - lang: JavaScript
        source: "import UnstructuredClient from 'unstructured-sdk';\n\nconst client\
          \ = new UnstructuredClient({\n  username: 'My Username',\n  password: 'My\
          \ Password',\n});\n\nconst connectorResponse = await client.dataSource.delete({\
          \ connector_name: 'connector_name' });\n\nconsole.log(connectorResponse.profile_id);"
      - lang: Python
        source: "from unstructured import UnstructuredClient\n\nclient = UnstructuredClient(\n\
          \    username=\"My Username\",\n    password=\"My Password\",\n)\nconnector_response\
          \ = client.data_source.delete(\n    connector_name=\"connector_name\",\n\
          )\nprint(connector_response.profile_id)"
  /ocr/ingest:
    post:
      tags:
      - Data Sources
      summary: Ocr Ingest
      description: OCR and ingest data into Unstructured.
      operationId: ocr_ingest_ocr_ingest_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OCRIngestRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '403':
          description: Missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '500':
          description: Internal Server Error. An unexpected error occurred while processing
            the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
      x-codeSamples:
      - lang: JavaScript
        source: "import UnstructuredClient from 'unstructured-sdk';\n\nconst client\
          \ = new UnstructuredClient({\n  username: 'My Username',\n  password: 'My\
          \ Password',\n});\n\nconst response = await client.dataSource.ingest({ data_connector_name:\
          \ 'data_connector_name' });\n\nconsole.log(response);"
      - lang: Python
        source: "from unstructured import UnstructuredClient\n\nclient = UnstructuredClient(\n\
          \    username=\"My Username\",\n    password=\"My Password\",\n)\nresponse\
          \ = client.data_source.ingest(\n    data_connector_name=\"data_connector_name\"\
          ,\n)\nprint(response)"
  /data/metadata/list:
    post:
      tags:
      - Data Sources
      summary: List Metadata
      description: Retrieve metadata data from Unstructured database
      operationId: list_metadata_data_metadata_list_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSourceMetadataRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSourceMetadataResponse'
        '403':
          description: Missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '500':
          description: Internal Server Error. An unexpected error occurred while processing
            the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
      x-codeSamples:
      - lang: JavaScript
        source: "import UnstructuredClient from 'unstructured-sdk';\n\nconst client\
          \ = new UnstructuredClient({\n  username: 'My Username',\n  password: 'My\
          \ Password',\n});\n\nconst response = await client.dataSource.listIngestedData({\
          \ data_connector_name: 'data_connector_name' });\n\nconsole.log(response.metadata);"
      - lang: Python
        source: "from unstructured import UnstructuredClient\n\nclient = UnstructuredClient(\n\
          \    username=\"My Username\",\n    password=\"My Password\",\n)\nresponse\
          \ = client.data_source.list_ingested_data(\n    data_connector_name=\"data_connector_name\"\
          ,\n)\nprint(response.metadata)"
  /destination/create:
    post:
      tags:
      - Destinations
      summary: Create Destination
      description: "Create a new destination\n\nAttributes:\n\n    connector_name:\
        \ The profile name of the destination to create.\n    connector_body: The\
        \ body of the destination to create."
      operationId: create_destination_destination_create_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDestinationConnectorRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorResponse'
        '403':
          description: Missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '500':
          description: Internal Server Error. An unexpected error occurred while processing
            the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
      x-codeSamples:
      - lang: JavaScript
        source: "import UnstructuredClient from 'unstructured-sdk';\n\nconst client\
          \ = new UnstructuredClient({\n  username: 'My Username',\n  password: 'My\
          \ Password',\n});\n\nconst connectorResponse = await client.destination.create({\n\
          \  connector_body: {\n    client_id: 'client_id',\n    client_secret: 'client_secret',\n\
          \    documents_library_folder_name: 'documents_library_folder_name',\n \
          \   name: 'name',\n    sharepoint_site_name: 'sharepoint_site_name',\n \
          \   tenant_id: 'tenant_id',\n  },\n  connector_name: 'connector_name',\n\
          });\n\nconsole.log(connectorResponse.profile_id);"
      - lang: Python
        source: "from unstructured import UnstructuredClient\n\nclient = UnstructuredClient(\n\
          \    username=\"My Username\",\n    password=\"My Password\",\n)\nconnector_response\
          \ = client.destination.create(\n    connector_body={\n        \"client_id\"\
          : \"client_id\",\n        \"client_secret\": \"client_secret\",\n      \
          \  \"documents_library_folder_name\": \"documents_library_folder_name\"\
          ,\n        \"name\": \"name\",\n        \"sharepoint_site_name\": \"sharepoint_site_name\"\
          ,\n        \"tenant_id\": \"tenant_id\",\n    },\n    connector_name=\"\
          connector_name\",\n)\nprint(connector_response.profile_id)"
  /destination/list:
    post:
      tags:
      - Destinations
      summary: List Destinations
      description: List all the destinations
      operationId: list_destinations_destination_list_post
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLLMConnectorResponse'
        '403':
          description: Missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '500':
          description: Internal Server Error. An unexpected error occurred while processing
            the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
      x-codeSamples:
      - lang: JavaScript
        source: "import UnstructuredClient from 'unstructured-sdk';\n\nconst client\
          \ = new UnstructuredClient({\n  username: 'My Username',\n  password: 'My\
          \ Password',\n});\n\nconst destinations = await client.destination.list();\n\
          \nconsole.log(destinations.connectors);"
      - lang: Python
        source: "from unstructured import UnstructuredClient\n\nclient = UnstructuredClient(\n\
          \    username=\"My Username\",\n    password=\"My Password\",\n)\ndestinations\
          \ = client.destination.list()\nprint(destinations.connectors)"
  /dataslice/destination/delete:
    post:
      tags:
      - Destinations
      summary: Delete Dataslice Destination
      description: Delete a destination
      operationId: delete_dataslice_destination_dataslice_destination_delete_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDestinationRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDestinationResponse'
        '403':
          description: Missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '500':
          description: Internal Server Error. An unexpected error occurred while processing
            the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
      x-codeSamples:
      - lang: JavaScript
        source: "import UnstructuredClient from 'unstructured-sdk';\n\nconst client\
          \ = new UnstructuredClient({\n  username: 'My Username',\n  password: 'My\
          \ Password',\n});\n\nconst destination = await client.destination.delete();\n\
          \nconsole.log(destination.message);"
      - lang: Python
        source: "from unstructured import UnstructuredClient\n\nclient = UnstructuredClient(\n\
          \    username=\"My Username\",\n    password=\"My Password\",\n)\ndestination\
          \ = client.destination.delete()\nprint(destination.message)"
  /dataslice/export/metadata/destination:
    post:
      tags:
      - Destinations
      summary: Export To Destination
      description: Export to a destination
      operationId: export_to_destination_dataslice_export_metadata_destination_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportDatasliceDestinationRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportDatasliceDestinationResponse'
        '403':
          description: Missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '500':
          description: Internal Server Error. An unexpected error occurred while processing
            the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
      x-codeSamples:
      - lang: JavaScript
        source: "import UnstructuredClient from 'unstructured-sdk';\n\nconst client\
          \ = new UnstructuredClient({\n  username: 'My Username',\n  password: 'My\
          \ Password',\n});\n\nconst response = await client.destination.export();\n\
          \nconsole.log(response.tracker_id);"
      - lang: Python
        source: "from unstructured import UnstructuredClient\n\nclient = UnstructuredClient(\n\
          \    username=\"My Username\",\n    password=\"My Password\",\n)\nresponse\
          \ = client.destination.export()\nprint(response.tracker_id)"
  /tags/upsert:
    post:
      tags:
      - Tags
      summary: Upsert Tag
      description: "Upsert a tag\n\nAttributes:\n\n    tag_data: The tag data to upsert\
        \ the tag with."
      operationId: upsert_tag_tags_upsert_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertTagRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertTagResponse'
        '403':
          description: Missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '500':
          description: Internal Server Error. An unexpected error occurred while processing
            the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
      x-codeSamples:
      - lang: JavaScript
        source: "import UnstructuredClient from 'unstructured-sdk';\n\nconst client\
          \ = new UnstructuredClient({\n  username: 'My Username',\n  password: 'My\
          \ Password',\n});\n\nconst response = await client.tags.upsert({ tag_data:\
          \ { name: 'name', output_type: 'output_type' } });\n\nconsole.log(response.available_values_added);"
      - lang: Python
        source: "from unstructured import UnstructuredClient\n\nclient = UnstructuredClient(\n\
          \    username=\"My Username\",\n    password=\"My Password\",\n)\nresponse\
          \ = client.tags.upsert(\n    tag_data={\n        \"name\": \"name\",\n \
          \       \"output_type\": \"output_type\",\n    },\n)\nprint(response.available_values_added)"
  /tags/list:
    get:
      tags:
      - Tags
      summary: List Tags
      description: Lists all tags
      operationId: list_tags_tags_list_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsResponse'
        '403':
          description: Missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '500':
          description: Internal Server Error. An unexpected error occurred while processing
            the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
      x-codeSamples:
      - lang: JavaScript
        source: "import UnstructuredClient from 'unstructured-sdk';\n\nconst client\
          \ = new UnstructuredClient({\n  username: 'My Username',\n  password: 'My\
          \ Password',\n});\n\nconst tags = await client.tags.list();\n\nconsole.log(tags.tags);"
      - lang: Python
        source: "from unstructured import UnstructuredClient\n\nclient = UnstructuredClient(\n\
          \    username=\"My Username\",\n    password=\"My Password\",\n)\ntags =\
          \ client.tags.list()\nprint(tags.tags)"
  /tags/delete:
    delete:
      tags:
      - Tags
      summary: Delete Tag
      description: "Delete a tag\n\nAttributes:\n\n    tag_name: The name of the tag\
        \ to delete."
      operationId: delete_tag_tags_delete_delete
      parameters:
      - name: tag_name
        in: query
        required: true
        schema:
          type: string
          title: Tag Name
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponse'
        '403':
          description: Missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '500':
          description: Internal Server Error. An unexpected error occurred while processing
            the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
      x-codeSamples:
      - lang: JavaScript
        source: "import UnstructuredClient from 'unstructured-sdk';\n\nconst client\
          \ = new UnstructuredClient({\n  username: 'My Username',\n  password: 'My\
          \ Password',\n});\n\nconst tagResponse = await client.tags.delete({ tag_name:\
          \ 'tag_name' });\n\nconsole.log(tagResponse.tag_name);"
      - lang: Python
        source: "from unstructured import UnstructuredClient\n\nclient = UnstructuredClient(\n\
          \    username=\"My Username\",\n    password=\"My Password\",\n)\ntag_response\
          \ = client.tags.delete(\n    tag_name=\"tag_name\",\n)\nprint(tag_response.tag_name)"
  /suggest_regex:
    post:
      tags:
      - Tags
      summary: Suggest Regex
      description: "Generate a regex pattern based on a natural language description\n\
        \nAttributes:\n\n    llm_profile_name: The name of the llm profile to use\
        \ for generating the regex.\n    description: Natural language description\
        \ of what to match (e.g., \"phone numbers in format (XXX) XXX-XXXX\").\n \
        \   examples: Optional list of example strings that should match the pattern."
      operationId: suggest_regex_suggest_regex_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SuggestRegexRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestRegexResponse'
        '403':
          description: Missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '500':
          description: Internal Server Error. An unexpected error occurred while processing
            the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
      x-codeSamples:
      - lang: JavaScript
        source: "import UnstructuredClient from 'unstructured-sdk';\n\nconst client\
          \ = new UnstructuredClient({\n  username: 'My Username',\n  password: 'My\
          \ Password',\n});\n\nconst response = await client.tags.pattern.suggestRegex({\
          \ description: 'description' });\n\nconsole.log(response.regex);"
      - lang: Python
        source: "from unstructured import UnstructuredClient\n\nclient = UnstructuredClient(\n\
          \    username=\"My Username\",\n    password=\"My Password\",\n)\nresponse\
          \ = client.tags.pattern.suggest_regex(\n    description=\"description\"\
          ,\n)\nprint(response.regex)"
  /taxonomy/upsert:
    post:
      tags:
      - Taxonomies
      summary: Upsert Taxonomy
      description: "Upsert a schema in the database.\n\nAttributes:\n\n    schema_name:\
        \ The stored name of the schema to upsert.\n    new_schema_name: The new name\
        \ of the schema to upsert.\n    schema_description: The description of the\
        \ schema to upsert.\n    schema_data: The data of the schema to upsert."
      operationId: upsert_taxonomy_taxonomy_upsert_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertTaxonomyRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxonomyOperationResponse'
        '403':
          description: Missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '500':
          description: Internal Server Error. An unexpected error occurred while processing
            the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
      x-codeSamples:
      - lang: JavaScript
        source: "import UnstructuredClient from 'unstructured-sdk';\n\nconst client\
          \ = new UnstructuredClient({\n  username: 'My Username',\n  password: 'My\
          \ Password',\n});\n\nconst taxonomyOperationResponse = await client.taxonomy.upsert({\
          \ taxonomy_name: 'taxonomy_name' });\n\nconsole.log(taxonomyOperationResponse.taxonomy_name);"
      - lang: Python
        source: "from unstructured import UnstructuredClient\n\nclient = UnstructuredClient(\n\
          \    username=\"My Username\",\n    password=\"My Password\",\n)\ntaxonomy_operation_response\
          \ = client.taxonomy.upsert(\n    taxonomy_name=\"taxonomy_name\",\n)\nprint(taxonomy_operation_response.taxonomy_name)"
  /taxonomy/list:
    post:
      tags:
      - Taxonomies
      summary: List Taxonomies
      description: "List all schemas for the authenticated user.\n\nAttributes:\n\n\
        \    schema_ids: The ids of the schemas to retrieve."
      operationId: list_taxonomies_taxonomy_list_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTaxonomiesRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTaxonomiesResponse'
        '403':
          description: Missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '500':
          description: Internal Server Error. An unexpected error occurred while processing
            the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
      x-codeSamples:
      - lang: JavaScript
        source: "import UnstructuredClient from 'unstructured-sdk';\n\nconst client\
          \ = new UnstructuredClient({\n  username: 'My Username',\n  password: 'My\
          \ Password',\n});\n\nconst taxonomies = await client.taxonomy.list();\n\n\
          console.log(taxonomies.taxonomies);"
      - lang: Python
        source: "from unstructured import UnstructuredClient\n\nclient = UnstructuredClient(\n\
          \    username=\"My Username\",\n    password=\"My Password\",\n)\ntaxonomies\
          \ = client.taxonomy.list()\nprint(taxonomies.taxonomies)"
  /taxonomy/delete:
    delete:
      tags:
      - Taxonomies
      summary: Delete Taxonomy
      description: "Delete a taxonomy by name.\n\nAttributes:\n\n    taxonomy_name:\
        \ The name of the taxonomy to delete."
      operationId: delete_taxonomy_taxonomy_delete_delete
      parameters:
      - name: taxonomy_name
        in: query
        required: true
        schema:
          type: string
          title: Taxonomy Name
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxonomyOperationResponse'
        '403':
          description: Missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '500':
          description: Internal Server Error. An unexpected error occurred while processing
            the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
      x-codeSamples:
      - lang: JavaScript
        source: "import UnstructuredClient from 'unstructured-sdk';\n\nconst client\
          \ = new UnstructuredClient({\n  username: 'My Username',\n  password: 'My\
          \ Password',\n});\n\nconst taxonomyOperationResponse = await client.taxonomy.delete({\
          \ taxonomy_name: 'taxonomy_name' });\n\nconsole.log(taxonomyOperationResponse.taxonomy_name);"
      - lang: Python
        source: "from unstructured import UnstructuredClient\n\nclient = UnstructuredClient(\n\
          \    username=\"My Username\",\n    password=\"My Password\",\n)\ntaxonomy_operation_response\
          \ = client.taxonomy.delete(\n    taxonomy_name=\"taxonomy_name\",\n)\nprint(taxonomy_operation_response.taxonomy_name)"
  /suggest_schema:
    post:
      tags:
      - Taxonomies
      summary: Suggest Taxonomy
      description: "Suggest a hierarchical tag taxonomy based on file content and\
        \ existing metadata\n\nAttributes:\n\n    data_connector_name: The name of\
        \ the vector database profile to use for accessing file content.\n    llm_profile_name:\
        \ Optional name of the language model profile to use for generating suggestions.\
        \ Defaults to DeasyLabs compute\n    file_names: Optional list of specific\
        \ files to analyze for the hierarchy suggestion.\n    dataslice_id: Optional\
        \ ID of a dataslice to pull files from for the hierarchy suggestion.\n   \
        \ current_tree: Optional existing hierarchy tree to build upon.\n    node:\
        \ Optional node location of the existing hierarchy tree to build upon.\n \
        \   condition: Optional filtering condition to select specific files for analysis.\n\
        \    user_context: Optional user-provided context to guide the suggestion\
        \ process.\n    context_level: Level at which to analyze content ('file' or\
        \ 'chunk'). Defaults to 'file'.\n    max_height: Maximum depth of the generated\
        \ hierarchy tree. Defaults to 2.\n    use_existing_tags: Whether to incorporate\
        \ existing tags in suggestions. Defaults to False.\n    use_extracted_tags:\
        \ Whether to use previously extracted tags. Defaults to False."
      operationId: suggest_taxonomy_suggest_schema_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetadataSuggestionRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataSuggestionResponse'
        '403':
          description: Missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '500':
          description: Internal Server Error. An unexpected error occurred while processing
            the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
      x-codeSamples:
      - lang: JavaScript
        source: "import UnstructuredClient from 'unstructured-sdk';\n\nconst client\
          \ = new UnstructuredClient({\n  username: 'My Username',\n  password: 'My\
          \ Password',\n});\n\nconst response = await client.taxonomy.suggest({ data_connector_name:\
          \ 'data_connector_name' });\n\nconsole.log(response.suggestion);"
      - lang: Python
        source: "from unstructured import UnstructuredClient\n\nclient = UnstructuredClient(\n\
          \    username=\"My Username\",\n    password=\"My Password\",\n)\nresponse\
          \ = client.taxonomy.suggest(\n    data_connector_name=\"data_connector_name\"\
          ,\n)\nprint(response.suggestion)"
  /metadata/delete:
    post:
      tags:
      - Metadata
      summary: Delete Metadata
      description: "Delete metadata for specified files and tags\n\nAttributes:\n\
        \    vector_db_config: The vector database configuration to use.\n    file_names:\
        \ The files to delete the metadata for.\n    tags: The tags to delete the\
        \ metadata for.\n    conditions: The conditions to delete the metadata for."
      operationId: delete_metadata_metadata_delete_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/app__models__models_metadata__DeleteMetadataRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__models_metadata__DeleteMetadataResponse'
        '403':
          description: Missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '500':
          description: Internal Server Error. An unexpected error occurred while processing
            the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
      x-codeSamples:
      - lang: JavaScript
        source: "import UnstructuredClient from 'unstructured-sdk';\n\nconst client\
          \ = new UnstructuredClient({\n  username: 'My Username',\n  password: 'My\
          \ Password',\n});\n\nconst metadata = await client.metadata.delete({ data_connector_name:\
          \ 'data_connector_name' });\n\nconsole.log(metadata.chunk_deleted_count);"
      - lang: Python
        source: "from unstructured import UnstructuredClient\n\nclient = UnstructuredClient(\n\
          \    username=\"My Username\",\n    password=\"My Password\",\n)\nmetadata\
          \ = client.metadata.delete(\n    data_connector_name=\"data_connector_name\"\
          ,\n)\nprint(metadata.chunk_deleted_count)"
  /metadata/list_paginated:
    post:
      tags:
      - Metadata
      summary: Get List Paginated Metadata
      description: "Get paginated filtered metadata based on conditions\n\nAttributes:\n\
        \n    data_connector_name: The name of the vdb profile to include in the dataslice.\n\
        \    dataslice_id: The dataslice for getting files from.\n    conditions:\
        \ The conditions to filter the files by.\n    tag_names: The names of the\
        \ tags to include in the metadata.\n    include_chunk_level: Whether to include\
        \ the chunk-level metadata.\n    offset: The offset to start the pagination\
        \ from.\n    limit: The limit to the number of metadata to return."
      operationId: get_list_paginated_metadata_metadata_list_paginated_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPaginatedMetadataRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPaginatedMetadataResponse'
        '403':
          description: Missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '500':
          description: Internal Server Error. An unexpected error occurred while processing
            the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
      x-codeSamples:
      - lang: JavaScript
        source: "import UnstructuredClient from 'unstructured-sdk';\n\nconst client\
          \ = new UnstructuredClient({\n  username: 'My Username',\n  password: 'My\
          \ Password',\n});\n\nconst response = await client.metadata.listPaginated({\
          \ data_connector_name: 'data_connector_name' });\n\nconsole.log(response.metadata);"
      - lang: Python
        source: "from unstructured import UnstructuredClient\n\nclient = UnstructuredClient(\n\
          \    username=\"My Username\",\n    password=\"My Password\",\n)\nresponse\
          \ = client.metadata.list_paginated(\n    data_connector_name=\"data_connector_name\"\
          ,\n)\nprint(response.metadata)"
  /metadata/list:
    post:
      tags:
      - Metadata
      summary: Get List Metadata
      description: "Get paginated filtered metadata based on conditions - supports\
        \ shared connections\n\nAttributes:\n\n    data_connector_name: The name of\
        \ the vdb profile to include in the dataslice.\n    dataslice_id: The dataslice\
        \ for getting files from.\n    conditions: The conditions to filter the files\
        \ by.\n    tag_names: The names of the tags to include in the metadata.\n\
        \    include_chunk_level: Whether to include the chunk-level metadata.\n \
        \   file_names: The names of the files to include in the metadata.\n    chunk_ids:\
        \ The ids of the chunks to include in the metadata.\n    group_by: The group\
        \ by to group the metadata by.\nReturns:\n\n    metadata: The metadata for\
        \ the files.\n    without chunk_ids -> {filename: {tag_id: {chunk_level: {chunk_id:\
        \ metadata, ...}, file_level: metadata}}}\n    with chunk_ids -> {chunk_id:\
        \ {metadata}}"
      operationId: get_list_metadata_metadata_list_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListMetadataRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMetadataResponse'
        '403':
          description: Missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '500':
          description: Internal Server Error. An unexpected error occurred while processing
            the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
      x-codeSamples:
      - lang: JavaScript
        source: "import UnstructuredClient from 'unstructured-sdk';\n\nconst client\
          \ = new UnstructuredClient({\n  username: 'My Username',\n  password: 'My\
          \ Password',\n});\n\nconst metadata = await client.metadata.list({ data_connector_name:\
          \ 'data_connector_name' });\n\nconsole.log(metadata.metadata);"
      - lang: Python
        source: "from unstructured import UnstructuredClient\n\nclient = UnstructuredClient(\n\
          \    username=\"My Username\",\n    password=\"My Password\",\n)\nmetadata\
          \ = client.metadata.list(\n    data_connector_name=\"data_connector_name\"\
          ,\n)\nprint(metadata.metadata)"
  /metadata/upsert:
    post:
      tags:
      - Metadata
      summary: Upsert Metadata
      description: "Upsert metadata for files and tags\n\nAttributes:\n\n    data_connector_name:\
        \ The name of the vdb profile to include in the dataslice.\n    dataslice_id:\
        \ The dataslice for getting files from.\n    metadata: The metadata to upsert\
        \ with the form {file_name: {tag_name: tag_value}}."
      operationId: upsert_metadata_metadata_upsert_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertMetadataRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertMetadataResponse'
        '403':
          description: Missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '500':
          description: Internal Server Error. An unexpected error occurred while processing
            the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
      x-codeSamples:
      - lang: JavaScript
        source: "import UnstructuredClient from 'unstructured-sdk';\n\nconst client\
          \ = new UnstructuredClient({\n  username: 'My Username',\n  password: 'My\
          \ Password',\n});\n\nconst response = await client.metadata.upsert({ metadata:\
          \ { foo: { foo: {} } } });\n\nconsole.log(response.success);"
      - lang: Python
        source: "from unstructured import UnstructuredClient\n\nclient = UnstructuredClient(\n\
          \    username=\"My Username\",\n    password=\"My Password\",\n)\nresponse\
          \ = client.metadata.upsert(\n    metadata={\n        \"foo\": {\n      \
          \      \"foo\": {}\n        }\n    },\n)\nprint(response.success)"
  /classify:
    post:
      tags:
      - Metadata
      summary: Classify Endpoint
      description: "Classify files specified in the request with the provided tags\n\
        \nAttributes:\n\n    data_connector_name: The name of the vdb profile to use\
        \ for classification.\n    llm_profile_name: The name of the llm profile to\
        \ use for classification.\n    file_names: The names of the files to classify.\n\
        \    tag_names: The names of the tags to use for classification if tag datas\
        \ are not provided.\n    tag_datas: The data of the tags to use for classification.\n\
        \    overwrite: Whether to overwrite existing tags.\n    hierarchy_name: The\
        \ name of the graph to use for classification if hierarchy data is not provided.\n\
        \    hierarchy_data: The data of the graph to use for classification.\n  \
        \  dataslice_id: The id of the dataslice to use for classification file filtering.\n\
        \    soft_run: If true, the classification will not save to Deasy and will\
        \ attempt to return the results."
      operationId: classify_endpoint_classify_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClassifyRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassifyResponse'
        '403':
          description: Missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '500':
          description: Internal Server Error. An unexpected error occurred while processing
            the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
      x-codeSamples:
      - lang: JavaScript
        source: "import UnstructuredClient from 'unstructured-sdk';\n\nconst client\
          \ = new UnstructuredClient({\n  username: 'My Username',\n  password: 'My\
          \ Password',\n});\n\nconst response = await client.metadata.generate.generate({\
          \ data_connector_name: 'data_connector_name' });\n\nconsole.log(response.message);"
      - lang: Python
        source: "from unstructured import UnstructuredClient\n\nclient = UnstructuredClient(\n\
          \    username=\"My Username\",\n    password=\"My Password\",\n)\nresponse\
          \ = client.metadata.generate.generate(\n    data_connector_name=\"data_connector_name\"\
          ,\n)\nprint(response.message)"
  /classify_bulk:
    post:
      tags:
      - Metadata
      summary: Classify Bulk Endpoint
      description: "Classify all files in data source in batches with the provided\
        \ tags\n\nAttributes:\n\n    data_connector_name: The name of the vdb profile\
        \ to use for classification.\n    llm_profile_name: The name of the llm profile\
        \ to use for classification.\n    total_data_sets: The total number of files\
        \ to classify.\n    tag_names: The names of the tags to use for classification\
        \ if tag datas are not provided.\n    tag_datas: The data of the tags to use\
        \ for classification.\n    overwrite: Whether to overwrite existing tags.\n\
        \    hierarchy_name: The name of the graph to use for classification if hierarchy\
        \ data is not provided.\n    hierarchy_data: The data of the graph to use\
        \ for classification.\n    dataslice_id: The id of the dataslice to use for\
        \ classification file filtering.\n    conditions: The conditions to use for\
        \ classification file filtering."
      operationId: classify_bulk_endpoint_classify_bulk_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClassifyBulkRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassifyBulkResponse'
        '403':
          description: Missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '500':
          description: Internal Server Error. An unexpected error occurred while processing
            the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
      x-codeSamples:
      - lang: JavaScript
        source: "import UnstructuredClient from 'unstructured-sdk';\n\nconst client\
          \ = new UnstructuredClient({\n  username: 'My Username',\n  password: 'My\
          \ Password',\n});\n\nconst response = await client.metadata.generate.generateBatch({\
          \ data_connector_name: 'data_connector_name' });\n\nconsole.log(response.message);"
      - lang: Python
        source: "from unstructured import UnstructuredClient\n\nclient = UnstructuredClient(\n\
          \    username=\"My Username\",\n    password=\"My Password\",\n)\nresponse\
          \ = client.metadata.generate.generate_batch(\n    data_connector_name=\"\
          data_connector_name\",\n)\nprint(response.message)"
  /sensitivity/detect:
    post:
      tags:
      - Metadata
      summary: Detect Sensitivity Endpoint
      description: "Detect sensitive data in files using pattern-based detection\n\
        \nAttributes:\n\n    data_connector_name: The name of the vdb profile to use.\n\
        \    llm_profile_name: Optional LLM profile (used for endpoint manager init).\n\
        \    file_names: The names of the files to scan for sensitive data.\n    dataslice_id:\
        \ The id of the dataslice to use for file filtering.\n    conditions: Additional\
        \ filtering conditions.\n    overwrite: Whether to overwrite existing sensitivity\
        \ tags.\n    soft_run: If true, returns detection results without saving.\n\
        \    taxonomy_name: Name of the sensitivity taxonomy to use.\n    min_confidence:\
        \ Minimum confidence threshold for detections."
      operationId: detect_sensitivity_endpoint_sensitivity_detect_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetectRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetectResponse'
        '403':
          description: Missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '500':
          description: Internal Server Error. An unexpected error occurred while processing
            the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
      x-codeSamples:
      - lang: JavaScript
        source: "import UnstructuredClient from 'unstructured-sdk';\n\nconst client\
          \ = new UnstructuredClient({\n  username: 'My Username',\n  password: 'My\
          \ Password',\n});\n\nconst response = await client.metadata.detectSensitive.detect({\
          \ data_connector_name: 'data_connector_name' });\n\nconsole.log(response.job_id);"
      - lang: Python
        source: "from unstructured import UnstructuredClient\n\nclient = UnstructuredClient(\n\
          \    username=\"My Username\",\n    password=\"My Password\",\n)\nresponse\
          \ = client.metadata.detect_sensitive.detect(\n    data_connector_name=\"\
          data_connector_name\",\n)\nprint(response.job_id)"
  /sensitivity/detect_bulk:
    post:
      tags:
      - Metadata
      summary: Detect Sensitivity Bulk Endpoint
      description: "Detect sensitive data in bulk across a dataslice or entire datasource\n\
        \nAttributes:\n\n    data_connector_name: The name of the vdb profile to use.\n\
        \    llm_profile_name: Optional LLM profile (used for endpoint manager init).\n\
        \    total_data_sets: Total number of files to process.\n    dataslice_id:\
        \ The id of the dataslice to use.\n    conditions: Additional filtering conditions.\n\
        \    overwrite: Whether to overwrite existing sensitivity tags.\n    taxonomy_name:\
        \ Name of the sensitivity taxonomy to use.\n    min_confidence: Minimum confidence\
        \ threshold for detections."
      operationId: detect_sensitivity_bulk_endpoint_sensitivity_detect_bulk_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetectBulkRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetectBulkResponse'
        '403':
          description: Missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '500':
          description: Internal Server Error. An unexpected error occurred while processing
            the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
      x-codeSamples:
      - lang: JavaScript
        source: "import UnstructuredClient from 'unstructured-sdk';\n\nconst client\
          \ = new UnstructuredClient({\n  username: 'My Username',\n  password: 'My\
          \ Password',\n});\n\nconst response = await client.metadata.detectSensitive.detectBatch({\n\
          \  data_connector_name: 'data_connector_name',\n});\n\nconsole.log(response.job_id);"
      - lang: Python
        source: "from unstructured import UnstructuredClient\n\nclient = UnstructuredClient(\n\
          \    username=\"My Username\",\n    password=\"My Password\",\n)\nresponse\
          \ = client.metadata.detect_sensitive.detect_batch(\n    data_connector_name=\"\
          data_connector_name\",\n)\nprint(response.job_id)"
  /progress_tracker/task_status:
    post:
      tags:
      - Task Tracking
      summary: Get Task Progress
      description: Get the status of a task.
      operationId: get_task_progress_progress_tracker_task_status_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskStatusRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskStatusResponse'
        '403':
          description: Missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '500':
          description: Internal Server Error. An unexpected error occurred while processing
            the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
      x-codeSamples:
      - lang: JavaScript
        source: "import UnstructuredClient from 'unstructured-sdk';\n\nconst client\
          \ = new UnstructuredClient({\n  username: 'My Username',\n  password: 'My\
          \ Password',\n});\n\nconst response = await client.taskStatus.getStatus({\
          \ job_id: 'job_id' });\n\nconsole.log(response.percent_complete);"
      - lang: Python
        source: "from unstructured import UnstructuredClient\n\nclient = UnstructuredClient(\n\
          \    username=\"My Username\",\n    password=\"My Password\",\n)\nresponse\
          \ = client.task_status.get_status(\n    job_id=\"job_id\",\n)\nprint(response.percent_complete)"
  /dataslice/create:
    post:
      tags:
      - Data Slices
      summary: Create Dataslice
      description: "Create a new data slice based on given conditions\n\nAttributes:\n\
        \n    dataslice_name: The name of the dataslice to create.\n    condition:\
        \ The conditions to qualify files for the dataslice.\n    condition_new: The\
        \ new conditions to qualify files for the dataslice.\n    description: The\
        \ description of the dataslice to create.\n    status: The status of the dataslice\
        \ to create.\n    data_points: The data points to include in the dataslice.\n\
        \    latest_graph: The latest graph to include in the dataslice.\n    graph_id:\
        \ The id of the graph to include in the dataslice.\n    data_connector_name:\
        \ The name of the vdb profile to include in the dataslice."
      operationId: create_dataslice_dataslice_create_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatasliceRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDatasliceResponse'
        '403':
          description: Missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '500':
          description: Internal Server Error. An unexpected error occurred while processing
            the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
      x-codeSamples:
      - lang: JavaScript
        source: "import UnstructuredClient from 'unstructured-sdk';\n\nconst client\
          \ = new UnstructuredClient({\n  username: 'My Username',\n  password: 'My\
          \ Password',\n});\n\nconst dataSlice = await client.dataSlice.create({\n\
          \  data_connector_name: 'data_connector_name',\n  dataslice_name: 'dataslice_name',\n\
          \  graph_id: 'graph_id',\n  latest_graph: { foo: 'bar' },\n});\n\nconsole.log(dataSlice.dataslice_id);"
      - lang: Python
        source: "from unstructured import UnstructuredClient\n\nclient = UnstructuredClient(\n\
          \    username=\"My Username\",\n    password=\"My Password\",\n)\ndata_slice\
          \ = client.data_slice.create(\n    data_connector_name=\"data_connector_name\"\
          ,\n    dataslice_name=\"dataslice_name\",\n    graph_id=\"graph_id\",\n\
          \    latest_graph={\n        \"foo\": \"bar\"\n    },\n)\nprint(data_slice.dataslice_id)"
  /dataslice/delete:
    delete:
      tags:
      - Data Slices
      summary: Delete Dataslice
      description: "Delete a data slice\n\nAttributes:\n\n    dataslice_id: The id\
        \ of the dataslice to delete."
      operationId: delete_dataslice_dataslice_delete_delete
      parameters:
      - name: dataslice_id
        in: query
        required: true
        schema:
          type: string
          title: Dataslice Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDatasliceResponse'
        '403':
          description: Missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '500':
          description: Internal Server Error. An unexpected error occurred while processing
            the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
      x-codeSamples:
      - lang: JavaScript
        source: "import UnstructuredClient from 'unstructured-sdk';\n\nconst client\
          \ = new UnstructuredClient({\n  username: 'My Username',\n  password: 'My\
          \ Password',\n});\n\nconst dataSlice = await client.dataSlice.delete({ dataslice_id:\
          \ 'dataslice_id' });\n\nconsole.log(dataSlice.data);"
      - lang: Python
        source: "from unstructured import UnstructuredClient\n\nclient = UnstructuredClient(\n\
          \    username=\"My Username\",\n    password=\"My Password\",\n)\ndata_slice\
          \ = client.data_slice.delete(\n    dataslice_id=\"dataslice_id\",\n)\nprint(data_slice.data)"
  /dataslice/list:
    get:
      tags:
      - Data Slices
      summary: List Dataslices
      description: List all dataslices
      operationId: list_dataslices_dataslice_list_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDataslicesResponse'
        '403':
          description: Missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '500':
          description: Internal Server Error. An unexpected error occurred while processing
            the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
      x-codeSamples:
      - lang: JavaScript
        source: "import UnstructuredClient from 'unstructured-sdk';\n\nconst client\
          \ = new UnstructuredClient({\n  username: 'My Username',\n  password: 'My\
          \ Password',\n});\n\nconst dataSlices = await client.dataSlice.list();\n\
          \nconsole.log(dataSlices.dataslices);"
      - lang: Python
        source: "from unstructured import UnstructuredClient\n\nclient = UnstructuredClient(\n\
          \    username=\"My Username\",\n    password=\"My Password\",\n)\ndata_slices\
          \ = client.data_slice.list()\nprint(data_slices.dataslices)"
  /dataslice/export/metadata:
    post:
      tags:
      - Data Slices
      summary: Export Dataslice
      description: "Export file-level/chunk-level metadata for a data slice\n\nAttributes:\n\
        \n    data_connector_name: The name of the vdb profile to export metadata\
        \ from.\n    dataslice_id: The id of the dataslice to export metadata from.\n\
        \    export_file_level: Whether to export file-level metadata or chunk-level\
        \ metadata.\n    export_format: The format to export the metadata in, JSON\
        \ or CSV.\n    selected_metadata_fields: The metadata fields to include in\
        \ the export."
      operationId: export_dataslice_dataslice_export_metadata_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportDatasliceMetadataRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '403':
          description: Missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '500':
          description: Internal Server Error. An unexpected error occurred while processing
            the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
      x-codeSamples:
      - lang: JavaScript
        source: "import UnstructuredClient from 'unstructured-sdk';\n\nconst client\
          \ = new UnstructuredClient({\n  username: 'My Username',\n  password: 'My\
          \ Password',\n});\n\nconst response = await client.dataSlice.export.slice({\
          \ data_connector_name: 'data_connector_name' });\n\nconsole.log(response);"
      - lang: Python
        source: "from unstructured import UnstructuredClient\n\nclient = UnstructuredClient(\n\
          \    username=\"My Username\",\n    password=\"My Password\",\n)\nresponse\
          \ = client.data_slice.export.slice(\n    data_connector_name=\"data_connector_name\"\
          ,\n)\nprint(response)"
components:
  schemas:
    AzureSQLDestinationConfig:
      properties:
        type:
          type: string
          const: AzureSQLNodeDestinationManager
          title: Type
          default: AzureSQLNodeDestinationManager
        server:
          type: string
          title: Server
        database:
          type: string
          title: Database
        username:
          type: string
          title: Username
        password:
          type: string
          title: Password
        table_name:
          type: string
          title: Table Name
        port:
          type: integer
          title: Port
          default: 1433
        dimension_threshold:
          anyOf:
          - type: integer
          - type: 'null'
          title: Dimension Threshold
          default: 384
        filename_key:
          type: string
          title: Filename Key
          default: filename
        text_key:
          type: string
          title: Text Key
          default: text
        id_key:
          type: string
          title: Id Key
          default: id
        driver:
          anyOf:
          - type: string
          - type: 'null'
          title: Driver
        create_new_table:
          type: boolean
          title: Create New Table
          default: false
      type: object
      required:
      - server
      - database
      - username
      - password
      - table_name
      title: AzureSQLDestinationConfig
    BaseTag:
      properties:
        name:
          type: string
          title: Name
        values:
          items:
            anyOf:
            - type: string
            - type: number
            - type: integer
          type: array
          title: Values
        operator:
          anyOf:
          - type: string
          - type: 'null'
          title: Operator
          default: any
      type: object
      required:
      - name
      - values
      title: BaseTag
    ClassifyBulkRequest:
      properties:
        data_connector_name:
          type: string
          title: Data Connector Name
        llm_profile_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Llm Profile Name
        total_data_sets:
          anyOf:
          - type: integer
          - type: 'null'
          title: Total Data Sets
        tag_names:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Tag Names
        tag_datas:
          anyOf:
          - additionalProperties:
              $ref: '#/components/schemas/Tag-Input'
            type: object
          - type: 'null'
          title: Tag Datas
        overwrite:
          type: boolean
          title: Overwrite
          default: false
        job_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Job Id
        hierarchy_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Hierarchy Name
        hierarchy_data:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Hierarchy Data
          default: {}
        dataslice_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Dataslice Id
        conditions:
          anyOf:
          - $ref: '#/components/schemas/Condition-Input'
          - type: 'null'
      type: object
      required:
      - data_connector_name
      title: ClassifyBulkRequest
    ClassifyBulkResponse:
      properties:
        message:
          type: string
          title: Message
      type: object
      required:
      - message
      title: ClassifyBulkResponse
    ClassifyRequest:
      properties:
        data_connector_name:
          type: string
          title: Data Connector Name
        llm_profile_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Llm Profile Name
        file_names:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: File Names
        tag_names:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Tag Names
        tag_datas:
          anyOf:
          - additionalProperties:
              $ref: '#/components/schemas/Tag-Input'
            type: object
          - type: 'null'
          title: Tag Datas
        overwrite:
          type: boolean
          title: Overwrite
          default: false
        job_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Job Id
        soft_run:
          type: boolean
          title: Soft Run
          default: false
        hierarchy_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Hierarchy Name
        hierarchy_data:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Hierarchy Data
          default: {}
        dataslice_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Dataslice Id
      type: object
      required:
      - data_connector_name
      title: ClassifyRequest
    ClassifyResponse:
      properties:
        message:
          type: string
          title: Message
        output:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Output
      type: object
      required:
      - message
      title: ClassifyResponse
    Condition-Input:
      properties:
        condition:
          anyOf:
          - $ref: '#/components/schemas/LogicCondition'
          - type: 'null'
        children:
          anyOf:
          - items:
              $ref: '#/components/schemas/Condition-Input'
            type: array
          - type: 'null'
          title: Children
        tag:
          anyOf:
          - $ref: '#/components/schemas/BaseTag'
          - type: 'null'
      type: object
      title: Condition
    Condition-Output:
      properties:
        condition:
          anyOf:
          - $ref: '#/components/schemas/LogicCondition'
          - type: 'null'
        children:
          anyOf:
          - items:
              $ref: '#/components/schemas/Condition-Output'
            type: array
          - type: 'null'
          title: Children
        tag:
          anyOf:
          - $ref: '#/components/schemas/BaseTag'
          - type: 'null'
      type: object
      title: Condition
    ConnectorResponse:
      properties:
        profile_id:
          type: string
          title: Profile Id
      type: object
      required:
      - profile_id
      title: ConnectorResponse
    CreateDatasliceRequest:
      properties:
        dataslice_name:
          type: string
          title: Dataslice Name
        condition:
          anyOf:
          - $ref: '#/components/schemas/Condition-Input'
          - type: 'null'
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        status:
          type: string
          title: Status
          default: active
        data_points:
          anyOf:
          - type: integer
          - type: 'null'
          title: Data Points
        latest_graph:
          additionalProperties: true
          type: object
          title: Latest Graph
        graph_id:
          type: string
          title: Graph Id
        data_connector_name:
          type: string
          title: Data Connector Name
        parent_dataslice_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Parent Dataslice Id
      type: object
      required:
      - dataslice_name
      - latest_graph
      - graph_id
      - data_connector_name
      title: CreateDatasliceRequest
    CreateDatasliceResponse:
      properties:
        dataslice_id:
          type: string
          title: Dataslice Id
      type: object
      required:
      - dataslice_id
      title: CreateDatasliceResponse
    CreateDestinationConnectorRequest:
      properties:
        connector_name:
          type: string
          title: Connector Name
        connector_body:
          anyOf:
          - $ref: '#/components/schemas/SharepointDestinationConfig'
          - $ref: '#/components/schemas/PostgresDestinationConfig'
          - $ref: '#/components/schemas/AzureSQLDestinationConfig'
          title: Connector Body
      type: object
      required:
      - connector_name
      - connector_body
      title: CreateDestinationConnectorRequest
    CreateVDBConnectorRequest:
      properties:
        connector_name:
          type: string
          title: Connector Name
        connector_body:
          anyOf:
          - $ref: '#/components/schemas/PSQLConnectorConfig'
          - $ref: '#/components/schemas/QdrantConnectorConfig'
          - $ref: '#/components/schemas/S3ConnectorConfig'
          - $ref: '#/components/schemas/SharepointConnectorConfig'
          title: Connector Body
      type: object
      required:
      - connector_name
      - connector_body
      title: CreateVDBConnectorRequest
    DeasyComputeConfig:
      properties:
        llmType:
          type: string
          title: Llmtype
          default: deasy_compute
      type: object
      title: DeasyComputeConfig
    DeasyDataslice:
      properties:
        dataslice_id:
          type: string
          title: Dataslice Id
        dataslice_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Dataslice Name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        status:
          type: string
          title: Status
        data_points:
          anyOf:
          - type: integer
          - type: 'null'
          title: Data Points
        last_updated:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Last Updated
        latest_graph:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Latest Graph
        graph_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Graph Id
        condition:
          anyOf:
          - items:
              additionalProperties: true
              type: object
            type: array
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Condition
        condition_new:
          anyOf:
          - $ref: '#/components/schemas/Condition-Output'
          - type: 'null'
        export_collection_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Export Collection Name
        vector_db_config:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Vector Db Config
      type: object
      required:
      - dataslice_id
      - status
      title: DeasyDataslice
    DeasyInputTag-Input:
      properties:
        tag_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Tag Id
        id:
          anyOf:
          - type: string
          - type: 'null'
          title: Id
        name:
          type: string
          title: Name
        output_type:
          type: string
          title: Output Type
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
          default: ''
        available_values:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Available Values
          default: []
        examples:
          anyOf:
          - items:
              anyOf:
              - type: string
              - additionalProperties: true
                type: object
            type: array
          - type: 'null'
          title: Examples
          default: []
        maxValues:
          anyOf:
          - type: integer
          - type: 'null'
          title: Maxvalues
        date_format:
          anyOf:
          - type: string
          - type: 'null'
          title: Date Format
        tuned:
          anyOf:
          - type: integer
          - type: 'null'
          title: Tuned
          default: 0
        enhance_file_metadata:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Enhance File Metadata
          default: true
        strategy:
          anyOf:
          - type: string
          - type: 'null'
          title: Strategy
          default: LLM
        patterns:
          anyOf:
          - items:
              $ref: '#/components/schemas/RegexPattern'
            type: array
          - type: 'null'
          title: Patterns
          default: []
        visual_rules:
          anyOf:
          - items:
              $ref: '#/components/schemas/RuleBasedRule-Input'
            type: array
          - type: 'null'
          title: Visual Rules
          default: []
        scope:
          anyOf:
          - type: string
          - type: 'null'
          title: Scope
          default: ALL_PAGES
      type: object
      required:
      - name
      - output_type
      title: DeasyInputTag
    DeasyInputTag-Output:
      properties:
        tag_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Tag Id
        id:
          anyOf:
          - type: string
          - type: 'null'
          title: Id
        name:
          type: string
          title: Name
        output_type:
          type: string
          title: Output Type
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
          default: ''
        available_values:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Available Values
          default: []
        examples:
          anyOf:
          - items:
              anyOf:
              - type: string
              - additionalProperties: true
                type: object
            type: array
          - type: 'null'
          title: Examples
          default: []
        maxValues:
          anyOf:
          - type: integer
          - type: 'null'
          title: Maxvalues
        date_format:
          anyOf:
          - type: string
          - type: 'null'
          title: Date Format
        tuned:
          anyOf:
          - type: integer
          - type: 'null'
          title: Tuned
          default: 0
        enhance_file_metadata:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Enhance File Metadata
          default: true
        strategy:
          anyOf:
          - type: string
          - type: 'null'
          title: Strategy
          default: LLM
        patterns:
          anyOf:
          - items:
              $ref: '#/components/schemas/RegexPattern'
            type: array
          - type: 'null'
          title: Patterns
          default: []
        visual_rules:
          anyOf:
          - items:
              $ref: '#/components/schemas/RuleBasedRule-Output'
            type: array
          - type: 'null'
          title: Visual Rules
          default: []
        scope:
          anyOf:
          - type: string
          - type: 'null'
          title: Scope
          default: ALL_PAGES
      type: object
      required:
      - name
      - output_type
      title: DeasyInputTag
    DeasySchema:
      properties:
        schema_id:
          type: string
          title: Schema Id
        schema_name:
          type: string
          title: Schema Name
        schema_description:
          type: string
          title: Schema Description
        schema_data:
          additionalProperties: true
          type: object
          title: Schema Data
        user_id:
          type: string
          title: User Id
        created_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Created At
        updated_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Updated At
        refreshed_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Refreshed At
      type: object
      required:
      - schema_id
      - schema_name
      - schema_description
      - schema_data
      - user_id
      title: DeasySchema
    DeasyTag:
      properties:
        tag_id:
          type: string
          title: Tag Id
        username:
          type: string
          title: Username
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        output_type:
          $ref: '#/components/schemas/TagOutputType'
          default: string
        available_values:
          items:
            type: string
          type: array
          title: Available Values
          default: []
        examples:
          items:
            anyOf:
            - type: string
            - additionalProperties: true
              type: object
          type: array
          title: Examples
          default: []
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
          default: '2025-10-29T13:29:36.422145'
        tuned:
          anyOf:
          - type: integer
          - type: 'null'
          title: Tuned
          default: 0
        maxValues:
          anyOf:
          - type: integer
          - type: 'null'
          title: Maxvalues
        date_format:
          anyOf:
          - type: string
          - type: 'null'
          title: Date Format
          default: MM-dd-YYYY
        enhance_file_metadata:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Enhance File Metadata
          default: true
        group:
          anyOf:
          - type: string
          - type: 'null'
          title: Group
        min_confidence:
          anyOf:
          - type: number
          - type: 'null'
          title: Min Confidence
        strategy:
          anyOf:
          - type: string
          - type: 'null'
          title: Strategy
          default: LLM
        patterns:
          anyOf:
          - items:
              $ref: '#/components/schemas/RegexPattern'
            type: array
          - type: 'null'
          title: Patterns
          default: []
        visual_rules:
          anyOf:
          - items:
              $ref: '#/components/schemas/RuleBasedRule-Output'
            type: array
          - type: 'null'
          title: Visual Rules
          default: []
        scope:
          anyOf:
          - type: string
          - type: 'null'
          title: Scope
          default: ALL_PAGES
      type: object
      required:
      - tag_id
      - username
      - name
      - description
      - created_at
      title: DeasyTag
    DeleteConnectorRequest:
      properties:
        connector_name:
          type: string
          title: Connector Name
      type: object
      required:
      - connector_name
      title: DeleteConnectorRequest
    DeleteDatasliceResponse:
      properties:
        message:
          type: string
          title: Message
        data:
          additionalProperties: true
          type: object
          title: Data
      type: object
      required:
      - message
      - data
      title: DeleteDatasliceResponse
    DeleteDestinationRequest:
      properties:
        destination_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Destination Name
        delete_tags:
          items: {}
          type: array
          title: Delete Tags
          default: []
      type: object
      title: DeleteDestinationRequest
    DeleteDestinationResponse:
      properties:
        message:
          type: string
          title: Message
        success:
          type: boolean
          title: Success
      type: object
      required:
      - message
      - success
      title: DeleteDestinationResponse
    DetectBulkRequest:
      properties:
        data_connector_name:
          type: string
          title: Data Connector Name
        llm_profile_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Llm Profile Name
        total_data_sets:
          anyOf:
          - type: integer
          - type: 'null'
          title: Total Data Sets
        dataslice_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Dataslice Id
        conditions:
          anyOf:
          - $ref: '#/components/schemas/Condition-Input'
          - type: 'null'
        overwrite:
          type: boolean
          title: Overwrite
          default: false
        taxonomy_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Taxonomy Name
          default: Default Sensitivity (v1)
        min_confidence:
          type: number
          title: Min Confidence
          default: 0.6
        job_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Job Id
      type: object
      required:
      - data_connector_name
      title: DetectBulkRequest
      description: Request model for bulk sensitivity detection endpoint
    DetectBulkResponse:
      properties:
        message:
          type: string
          title: Message
        job_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Job Id
      type: object
      required:
      - message
      title: DetectBulkResponse
    DetectRequest:
      properties:
        data_connector_name:
          type: string
          title: Data Connector Name
        llm_profile_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Llm Profile Name
        file_names:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: File Names
        dataslice_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Dataslice Id
        conditions:
          anyOf:
          - $ref: '#/components/schemas/Condition-Input'
          - type: 'null'
        overwrite:
          type: boolean
          title: Overwrite
          default: false
        soft_run:
          type: boolean
          title: Soft Run
          default: false
        taxonomy_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Taxonomy Name
          default: Default Sensitivity (v1)
        min_confidence:
          type: number
          title: Min Confidence
          default: 0.6
        selected_entity_types:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Selected Entity Types
        job_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Job Id
      type: object
      required:
      - data_connector_name
      title: DetectRequest
      description: Request model for sensitivity detection endpoint
    DetectResponse:
      properties:
        message:
          type: string
          title: Message
        job_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Job Id
        output:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Output
      type: object
      required:
      - message
      title: DetectResponse
    ExportDatasliceDestinationRequest:
      properties:
        dataslice_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Dataslice Id
        data_connector_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Data Connector Name
        destination_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Destination Name
        export_tags:
          items: {}
          type: array
          title: Export Tags
          default: []
        export_level:
          $ref: '#/components/schemas/ExportLevel'
          default: both
        export_nodes:
          type: boolean
          title: Export Nodes
          default: true
        export_metadata:
          type: boolean
          title: Export Metadata
          default: true
        metadata_format:
          anyOf:
          - $ref: '#/components/schemas/MetadataStorageFormat'
          - type: 'null'
      type: object
      title: ExportDatasliceDestinationRequest
    ExportDatasliceDestinationResponse:
      properties:
        message:
          type: string
          title: Message
        success:
          type: integer
          title: Success
        failed:
          type: integer
          title: Failed
        failed_items:
          items:
            type: string
          type: array
          title: Failed Items
        failed_tags:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Failed Tags
        tracker_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Tracker Id
      type: object
      required:
      - message
      - success
      - failed
      - failed_items
      title: ExportDatasliceDestinationResponse
    ExportDatasliceMetadataRequest:
      properties:
        data_connector_name:
          type: string
          title: Data Connector Name
        dataslice_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Dataslice Id
        export_file_level:
          type: boolean
          title: Export File Level
          default: false
        export_format:
          anyOf:
          - $ref: '#/components/schemas/ExportFormat'
          - type: 'null'
        selected_metadata_fields:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Selected Metadata Fields
      type: object
      required:
      - data_connector_name
      title: ExportDatasliceMetadataRequest
    ExportFormat:
      type: string
      enum:
      - json
      - csv
      title: ExportFormat
    ExportLevel:
      type: string
      enum:
      - file
      - chunk
      - both
      title: ExportLevel
    GraphNode:
      properties:
        label:
          anyOf:
          - type: string
          - type: 'null'
          title: Label
          default: Root
        path:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Path
          default: []
      type: object
      title: GraphNode
    GraphTagType:
      type: string
      enum:
      - open_ended
      - binary
      - mixed
      - defined_values
      - hierarchy
      title: GraphTagType
    HTTPError:
      properties:
        detail:
          type: string
          title: Detail
      type: object
      required:
      - detail
      title: HTTPError
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    JobStatus:
      type: string
      enum:
      - in_progress
      - completed
      - aborted
      - failed
      title: JobStatus
    ListDataslicesResponse:
      properties:
        dataslices:
          items:
            $ref: '#/components/schemas/DeasyDataslice'
          type: array
          title: Dataslices
      type: object
      required:
      - dataslices
      title: ListDataslicesResponse
    ListLLMConnectorResponse:
      properties:
        connectors:
          additionalProperties:
            anyOf:
            - $ref: '#/components/schemas/DeasyComputeConfig'
            - $ref: '#/components/schemas/OpenAIConfig'
          type: object
          title: Connectors
      type: object
      required:
      - connectors
      title: ListLLMConnectorResponse
    ListMetadataRequest:
      properties:
        data_connector_name:
          type: string
          title: Data Connector Name
        dataslice_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Dataslice Id
        tag_names:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Tag Names
        include_chunk_level:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Include Chunk Level
          default: true
        file_names:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: File Names
        chunk_ids:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Chunk Ids
      type: object
      required:
      - data_connector_name
      title: ListMetadataRequest
    ListMetadataResponse:
      properties:
        metadata:
          anyOf:
          - additionalProperties:
              additionalProperties:
                $ref: '#/components/schemas/TagMetadata'
              type: object
            type: object
          - additionalProperties:
              additionalProperties:
                $ref: '#/components/schemas/Metadata'
              type: object
            type: object
          title: Metadata
      type: object
      required:
      - metadata
      title: ListMetadataResponse
    ListPaginatedMetadataRequest:
      properties:
        data_connector_name:
          type: string
          title: Data Connector Name
        dataslice_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Dataslice Id
        tag_names:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Tag Names
        include_chunk_level:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Include Chunk Level
          default: true
        offset:
          anyOf:
          - type: integer
          - type: 'null'
          title: Offset
          default: 0
        limit:
          anyOf:
          - type: integer
          - type: 'null'
          title: Limit
          default: 50
      type: object
      required:
      - data_connector_name
      title: ListPaginatedMetadataRequest
    ListPaginatedMetadataResponse:
      properties:
        metadata:
          anyOf:
          - additionalProperties:
              additionalProperties:
                $ref: '#/components/schemas/TagMetadata'
              type: object
            type: object
          - additionalProperties:
              additionalProperties:
                $ref: '#/components/schemas/Metadata'
              type: object
            type: object
          title: Metadata
        next_offset:
          anyOf:
          - type: integer
          - type: 'null'
          title: Next Offset
      type: object
      required:
      - metadata
      - next_offset
      title: ListPaginatedMetadataResponse
    ListSourceMetadataRequest:
      properties:
        data_connector_name:
          type: string
          title: Data Connector Name
        group_by:
          anyOf:
          - type: string
          - type: 'null'
          title: Group By
          default: file
        metadata_keys:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Metadata Keys
        file_names:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: File Names
        point_ids:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Point Ids
        metadata_key_filters:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Metadata Key Filters
        metadata_value_filters:
          anyOf:
          - additionalProperties:
              items:
                type: string
              type: array
            type: object
          - type: 'null'
          title: Metadata Value Filters
        full_text_filters:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Full Text Filters
        limit:
          anyOf:
          - type: integer
          - type: 'null'
          title: Limit
        with_vectors:
          anyOf:
          - type: boolean
          - type: 'null'
          title: With Vectors
          default: false
      type: object
      required:
      - data_connector_name
      title: ListSourceMetadataRequest
    ListSourceMetadataResponse:
      properties:
        metadata:
          additionalProperties:
            additionalProperties: true
            type: object
          type: object
          title: Metadata
      type: object
      required:
      - metadata
      title: ListSourceMetadataResponse
    ListTagsResponse:
      properties:
        tags:
          items:
            $ref: '#/components/schemas/DeasyTag'
          type: array
          title: Tags
      type: object
      required:
      - tags
      title: ListTagsResponse
    ListTaxonomiesRequest:
      properties:
        taxonomy_ids:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Taxonomy Ids
      type: object
      title: ListTaxonomiesRequest
    ListTaxonomiesResponse:
      properties:
        taxonomies:
          items:
            $ref: '#/components/schemas/DeasySchema'
          type: array
          title: Taxonomies
      type: object
      required:
      - taxonomies
      title: ListTaxonomiesResponse
    ListVDBConnectorResponse:
      properties:
        connectors:
          additionalProperties:
            anyOf:
            - $ref: '#/components/schemas/PSQLConnectorConfig'
            - $ref: '#/components/schemas/QdrantConnectorConfig'
            - $ref: '#/components/schemas/S3ConnectorConfig'
            - $ref: '#/components/schemas/SharepointConnectorConfig'
          type: object
          title: Connectors
      type: object
      required:
      - connectors
      title: ListVDBConnectorResponse
    LogicCondition:
      type: string
      enum:
      - AND
      - OR
      title: LogicCondition
    Metadata:
      properties:
        values:
          items:
            anyOf:
            - type: string
            - type: number
            - type: integer
          type: array
          title: Values
        evidence:
          anyOf:
          - type: string
          - type: 'null'
          title: Evidence
      type: object
      required:
      - values
      title: Metadata
    MetadataStorageFormat:
      type: string
      enum:
      - column_store
      - json_store
      title: MetadataStorageFormat
    MetadataSuggestionRequest:
      properties:
        data_connector_name:
          type: string
          title: Data Connector Name
        llm_profile_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Llm Profile Name
        file_names:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: File Names
        dataslice_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Dataslice Id
        progress_tracking_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Progress Tracking Id
        schema_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Schema Name
        current_tree:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Current Tree
        condition:
          anyOf:
          - $ref: '#/components/schemas/Condition-Input'
          - type: 'null'
        node:
          anyOf:
          - $ref: '#/components/schemas/GraphNode'
          - type: 'null'
          default:
            label: Root
            path: []
        user_context:
          anyOf:
          - type: string
          - type: 'null'
          title: User Context
        context_level:
          anyOf:
          - type: string
          - type: 'null'
          title: Context Level
          default: file
        max_height:
          anyOf:
          - type: integer
          - type: 'null'
          title: Max Height
          default: 2
        use_existing_tags:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Use Existing Tags
          default: false
        use_extracted_tags:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Use Extracted Tags
          default: false
        use_mix_llm_and_source:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Use Mix Llm And Source
          default: false
        graph_tag_type:
          anyOf:
          - $ref: '#/components/schemas/GraphTagType'
          - type: 'null'
          default: open_ended
        min_tags_per_level:
          anyOf:
          - type: integer
          - type: 'null'
          title: Min Tags Per Level
          default: 1
        max_tags_per_level:
          anyOf:
          - type: integer
          - type: 'null'
          title: Max Tags Per Level
          default: 10
        set_max_values:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Set Max Values
          default: true
        values_per_tag:
          anyOf:
          - type: integer
          - type: 'null'
          title: Values Per Tag
        auto_save:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Auto Save
          default: true
        validate_tags:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Validate Tags
          default: true
        validation_sample_size:
          anyOf:
          - type: integer
          - type: 'null'
          title: Validation Sample Size
          default: 10
        not_found_threshold:
          anyOf:
          - type: number
          - type: 'null'
          title: Not Found Threshold
          default: 1
        use_hierarchical_clustering:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Use Hierarchical Clustering
          default: true
        deep_suggestion_mode:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Deep Suggestion Mode
          default: false
      type: object
      required:
      - data_connector_name
      title: MetadataSuggestionRequest
    MetadataSuggestionResponse:
      properties:
        status_code:
          anyOf:
          - type: integer
          - type: 'null'
          title: Status Code
          default: 200
        message:
          anyOf:
          - type: string
          - type: 'null'
          title: Message
          default: ''
        suggestion:
          additionalProperties: true
          type: object
          title: Suggestion
        suggested_tags:
          anyOf:
          - additionalProperties:
              $ref: '#/components/schemas/DeasyInputTag-Output'
            type: object
          - type: 'null'
          title: Suggested Tags
        node:
          anyOf:
          - $ref: '#/components/schemas/GraphNode'
          - type: 'null'
        tag_not_found_rates:
          anyOf:
          - additionalProperties:
              type: number
            type: object
          - type: 'null'
          title: Tag Not Found Rates
      type: object
      required:
      - suggestion
      title: MetadataSuggestionResponse
    OCRIngestRequest:
      properties:
        data_connector_name:
          type: string
          title: Data Connector Name
        llm_profile_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Llm Profile Name
        file_names:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: File Names
        job_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Job Id
        clean_up_out_of_sync:
          type: boolean
          title: Clean Up Out Of Sync
          default: true
        file_count_to_run:
          anyOf:
          - type: integer
          - type: 'null'
          title: File Count To Run
        use_llm:
          type: boolean
          title: Use Llm
          default: false
      type: object
      required:
      - data_connector_name
      title: OCRIngestRequest
    OpenAIConfig:
      properties:
        llmType:
          type: string
          title: Llmtype
          default: openai
        api_key:
          type: string
          title: Api Key
        temperature:
          type: number
          title: Temperature
          default: 0
        rpm_completion:
          type: integer
          title: Rpm Completion
        tpm_completion:
          type: integer
          title: Tpm Completion
        rpm_embedding:
          anyOf:
          - type: integer
          - type: 'null'
          title: Rpm Embedding
        tpm_embedding:
          anyOf:
          - type: integer
          - type: 'null'
          title: Tpm Embedding
      type: object
      required:
      - api_key
      - rpm_completion
      - tpm_completion
      title: OpenAIConfig
    PSQLConnectorConfig:
      properties:
        type:
          type: string
          const: PSQLVectorDBManager
          title: Type
          default: PSQLVectorDBManager
        database_name:
          type: string
          title: Database Name
        collection_name:
          type: string
          title: Collection Name
        url:
          type: string
          title: Url
        password:
          type: string
          title: Password
        db_user:
          type: string
          title: Db User
        port:
          type: string
          title: Port
        name:
          type: string
          title: Name
        index_info:
          anyOf:
          - $ref: '#/components/schemas/PSQLIndexInfo'
          - type: 'null'
        filename_key:
          type: string
          title: Filename Key
          default: filename
        text_key:
          type: string
          title: Text Key
          default: text
      type: object
      required:
      - database_name
      - collection_name
      - url
      - password
      - db_user
      - port
      - name
      title: PSQLConnectorConfig
    PSQLIndexInfo:
      properties:
        found_indexes:
          items:
            type: string
          type: array
          title: Found Indexes
        total_indexes_found:
          type: integer
          title: Total Indexes Found
      type: object
      required:
      - found_indexes
      - total_indexes_found
      title: PSQLIndexInfo
    PostgresDestinationConfig:
      properties:
        type:
          type: string
          const: PostgresNodeDestinationManager
          title: Type
          default: PostgresNodeDestinationManager
        name:
          type: string
          title: Name
        url:
          type: string
          title: Url
        database_name:
          type: string
          title: Database Name
        collection_name:
          type: string
          title: Collection Name
        db_user:
          type: string
          title: Db User
        port:
          type: integer
          title: Port
        password:
          type: string
          title: Password
        id_key:
          type: string
          title: Id Key
          default: id
        tags_key:
          type: string
          title: Tags Key
          default: tags
        filename_key:
          type: string
          title: Filename Key
          default: filename
        text_key:
          type: string
          title: Text Key
          default: text
        dimension_threshold:
          anyOf:
          - type: integer
          - type: 'null'
          title: Dimension Threshold
          default: 384
        page_num_key:
          anyOf:
          - type: string
          - type: 'null'
          title: Page Num Key
        create_new_collection:
          type: boolean
          title: Create New Collection
          default: false
      type: object
      required:
      - name
      - url
      - database_name
      - collection_name
      - db_user
      - port
      - password
      title: PostgresDestinationConfig
    QdrantConnectorConfig:
      properties:
        type:
          type: string
          const: QdrantVectorDBManager
          title: Type
          default: QdrantVectorDBManager
        name:
          type: string
          title: Name
        filename_key:
          type: string
          title: Filename Key
          default: filename
        text_key:
          type: string
          title: Text Key
          default: text
        api_key:
          type: string
          title: Api Key
        collection_name:
          type: string
          title: Collection Name
        url:
          type: string
          title: Url
        index_info:
          anyOf:
          - $ref: '#/components/schemas/QdrantIndexInfo'
          - type: 'null'
      type: object
      required:
      - name
      - api_key
      - collection_name
      - url
      title: QdrantConnectorConfig
    QdrantIndexInfo:
      properties:
        total_indexes_found:
          type: integer
          title: Total Indexes Found
      type: object
      required:
      - total_indexes_found
      title: QdrantIndexInfo
    RegexPattern:
      properties:
        pattern:
          type: string
          title: Pattern
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        output_value:
          anyOf:
          - type: string
          - type: 'null'
          title: Output Value
        confidence:
          anyOf:
          - type: number
          - type: 'null'
          title: Confidence
        validator:
          anyOf:
          - type: string
          - type: 'null'
          title: Validator
        active:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Active
          default: true
      type: object
      required:
      - pattern
      title: RegexPattern
      description: Model for regex pattern configuration in tags.
    RuleBasedRule-Input:
      properties:
        tag_value:
          anyOf:
          - type: integer
          - type: number
          - type: string
          - type: 'null'
          title: Tag Value
        condition:
          anyOf:
          - $ref: '#/components/schemas/Condition-Input'
          - type: 'null'
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        confidence:
          anyOf:
          - type: number
          - type: 'null'
          title: Confidence
      type: object
      title: RuleBasedRule
      description: Model for rule-based tag configuration.
    RuleBasedRule-Output:
      properties:
        tag_value:
          anyOf:
          - type: integer
          - type: number
          - type: string
          - type: 'null'
          title: Tag Value
        condition:
          anyOf:
          - $ref: '#/components/schemas/Condition-Output'
          - type: 'null'
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        confidence:
          anyOf:
          - type: number
          - type: 'null'
          title: Confidence
      type: object
      title: RuleBasedRule
      description: Model for rule-based tag configuration.
    S3ConnectorConfig:
      properties:
        type:
          type: string
          const: S3DataSourceManager
          title: Type
          default: S3DataSourceManager
        bucket_name:
          type: string
          title: Bucket Name
        aws_access_key_id:
          type: string
          title: Aws Access Key Id
        aws_secret_access_key:
          type: string
          title: Aws Secret Access Key
        name:
          type: string
          title: Name
      type: object
      required:
      - bucket_name
      - aws_access_key_id
      - aws_secret_access_key
      - name
      title: S3ConnectorConfig
    SharepointConnectorConfig:
      properties:
        type:
          type: string
          const: SharepointDataSourceManager
          title: Type
          default: SharepointDataSourceManager
        name:
          type: string
          title: Name
        client_id:
          type: string
          title: Client Id
        client_secret:
          type: string
          title: Client Secret
        tenant_id:
          type: string
          title: Tenant Id
        sharepoint_site_name:
          type: string
          title: Sharepoint Site Name
      type: object
      required:
      - name
      - client_id
      - client_secret
      - tenant_id
      - sharepoint_site_name
      title: SharepointConnectorConfig
    SharepointDestinationConfig:
      properties:
        type:
          type: string
          const: SharepointNodeDestinationManager
          title: Type
          default: SharepointNodeDestinationManager
        name:
          type: string
          title: Name
        client_id:
          type: string
          title: Client Id
        client_secret:
          type: string
          title: Client Secret
        tenant_id:
          type: string
          title: Tenant Id
        sharepoint_site_name:
          type: string
          title: Sharepoint Site Name
        documents_library_folder_name:
          type: string
          title: Documents Library Folder Name
      type: object
      required:
      - name
      - client_id
      - client_secret
      - tenant_id
      - sharepoint_site_name
      - documents_library_folder_name
      title: SharepointDestinationConfig
    SuggestRegexRequest:
      properties:
        llm_profile_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Llm Profile Name
        description:
          type: string
          title: Description
        examples:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Examples
          default: []
      type: object
      required:
      - description
      title: SuggestRegexRequest
    SuggestRegexResponse:
      properties:
        regex:
          type: string
          title: Regex
        explanation:
          anyOf:
          - type: string
          - type: 'null'
          title: Explanation
      type: object
      required:
      - regex
      title: SuggestRegexResponse
    Tag-Input:
      properties:
        tag_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Tag Id
        username:
          anyOf:
          - type: string
          - type: 'null'
          title: Username
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        output_type:
          anyOf:
          - $ref: '#/components/schemas/TagOutputType'
          - type: 'null'
          default: string
        available_values:
          anyOf:
          - items:
              anyOf:
              - type: string
              - type: number
              - type: integer
            type: array
          - type: 'null'
          title: Available Values
          default: []
        examples:
          anyOf:
          - items:
              anyOf:
              - type: string
              - additionalProperties: true
                type: object
            type: array
          - type: 'null'
          title: Examples
          default: []
        created_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Created At
        updated_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Updated At
        maxValues:
          anyOf:
          - type: integer
          - type: string
          - items: {}
            type: array
          - type: 'null'
          title: Maxvalues
        neg_examples:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Neg Examples
          default: []
        retry_feedback:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Retry Feedback
        date_format:
          anyOf:
          - type: string
          - type: 'null'
          title: Date Format
        strategy:
          anyOf:
          - type: string
          - type: 'null'
          title: Strategy
          default: LLM
        scope:
          anyOf:
          - type: string
          - type: 'null'
          title: Scope
          default: ALL_PAGES
        truncated_available_values:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Truncated Available Values
          default: false
        enhance_file_metadata:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Enhance File Metadata
          default: true
        regex:
          anyOf:
          - type: string
          - type: 'null'
          title: Regex
        patterns:
          anyOf:
          - items:
              $ref: '#/components/schemas/RegexPattern'
            type: array
          - type: 'null'
          title: Patterns
          default: []
        visual_rules:
          anyOf:
          - items:
              $ref: '#/components/schemas/RuleBasedRule-Input'
            type: array
          - type: 'null'
          title: Visual Rules
          default: []
      type: object
      required:
      - name
      - description
      title: Tag
    TagMetadata:
      properties:
        chunk_level:
          anyOf:
          - additionalProperties:
              anyOf:
              - $ref: '#/components/schemas/Metadata'
              - type: 'null'
            type: object
          - type: 'null'
          title: Chunk Level
        file_level:
          anyOf:
          - $ref: '#/components/schemas/Metadata'
          - type: 'null'
      type: object
      title: TagMetadata
    TagOutputType:
      type: string
      enum:
      - string
      - binary
      - number
      - date
      title: TagOutputType
    TagResponse:
      properties:
        tag_name:
          type: string
          title: Tag Name
      type: object
      required:
      - tag_name
      title: TagResponse
    TaskStatusRequest:
      properties:
        job_id:
          type: string
          title: Job Id
      type: object
      required:
      - job_id
      title: TaskStatusRequest
    TaskStatusResponse:
      properties:
        percent_complete:
          type: number
          title: Percent Complete
        status:
          $ref: '#/components/schemas/JobStatus'
      type: object
      required:
      - percent_complete
      - status
      title: TaskStatusResponse
    TaxonomyOperationResponse:
      properties:
        taxonomy_name:
          type: string
          title: Taxonomy Name
      type: object
      required:
      - taxonomy_name
      title: TaxonomyOperationResponse
    UpdateVDBConnectorRequest:
      properties:
        connector_name:
          type: string
          title: Connector Name
        connector_body:
          anyOf:
          - $ref: '#/components/schemas/PSQLConnectorConfig'
          - $ref: '#/components/schemas/QdrantConnectorConfig'
          - $ref: '#/components/schemas/S3ConnectorConfig'
          - $ref: '#/components/schemas/SharepointConnectorConfig'
          title: Connector Body
      type: object
      required:
      - connector_name
      - connector_body
      title: UpdateVDBConnectorRequest
    UpsertMetadataRequest:
      properties:
        data_connector_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Data Connector Name
        dataslice_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Dataslice Id
        metadata:
          anyOf:
          - additionalProperties:
              additionalProperties:
                $ref: '#/components/schemas/TagMetadata'
              type: object
            type: object
          - additionalProperties:
              additionalProperties:
                $ref: '#/components/schemas/Metadata'
              type: object
            type: object
          title: Metadata
      type: object
      required:
      - metadata
      title: UpsertMetadataRequest
    UpsertMetadataResponse:
      properties:
        success:
          type: boolean
          title: Success
      type: object
      required:
      - success
      title: UpsertMetadataResponse
    UpsertTagRequest:
      properties:
        tag_data:
          $ref: '#/components/schemas/DeasyInputTag-Input'
      type: object
      required:
      - tag_data
      title: UpsertTagRequest
    UpsertTagResponse:
      properties:
        tag_name:
          type: string
          title: Tag Name
        tag:
          $ref: '#/components/schemas/DeasyTag'
        available_values_added:
          items:
            type: string
          type: array
          title: Available Values Added
      type: object
      required:
      - tag_name
      - tag
      - available_values_added
      title: UpsertTagResponse
    UpsertTaxonomyRequest:
      properties:
        taxonomy_name:
          type: string
          title: Taxonomy Name
        new_taxonomy_name:
          anyOf:
          - type: string
          - type: 'null'
          title: New Taxonomy Name
        taxonomy_description:
          anyOf:
          - type: string
          - type: 'null'
          title: Taxonomy Description
        taxonomy_data:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Taxonomy Data
      type: object
      required:
      - taxonomy_name
      title: UpsertTaxonomyRequest
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
    app__models__models_metadata__DeleteMetadataRequest:
      properties:
        data_connector_name:
          type: string
          title: Data Connector Name
        file_names:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: File Names
        tags:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Tags
        conditions:
          anyOf:
          - $ref: '#/components/schemas/Condition-Input'
          - type: 'null'
      type: object
      required:
      - data_connector_name
      title: DeleteMetadataRequest
    app__models__models_metadata__DeleteMetadataResponse:
      properties:
        chunk_deleted_count:
          type: integer
          title: Chunk Deleted Count
        file_deleted_count:
          type: integer
          title: File Deleted Count
      type: object
      required:
      - chunk_deleted_count
      - file_deleted_count
      title: DeleteMetadataResponse
  securitySchemes:
    HTTPBearer:
      type: http
      scheme: bearer
    BasicAuth:
      type: http
      scheme: basic
